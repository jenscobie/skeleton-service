project.buildDir = 'target'

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'com.bmuschko.vagrant'

sourceCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-vagrant-plugin:2.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'io.dropwizard:dropwizard-core:0.8.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.3'
    testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
}

sourceSets {
    contractTest {
        groovy.srcDir "src/contract/groovy"
        resources.srcDir "src/contract/resources"
        compileClasspath += test.compileClasspath
        runtimeClasspath += test.runtimeClasspath
    }
}

idea {
    module {
        testSourceDirs += file('src/contract/groovy')
    }
    project {
        ipr {
            withXml { provider ->
                provider.node.component
                        .find { it.@name == 'VcsDirectoryMappings' }
                        .mapping.@vcs = 'Git'
            }
        }
    }
}

mainClassName = 'com.example.helloworld.HelloWorldApplication'

run {
    args 'server', './src/main/resources/hello-world.yml'
}

task lint(type: Exec) {
    commandLine 'chef', 'exec', 'foodcritic', 'provision-package/chef/cookbooks', '-f', 'any'
}

task boot(dependsOn: vagrantUp)
task destroy(dependsOn: vagrantDestroy)

task contract(type: Test) {
    testClassesDir = sourceSets.contractTest.output.classesDir
    classpath = sourceSets.contractTest.runtimeClasspath
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}